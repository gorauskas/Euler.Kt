package com.gorauskas.euler.solutions.forty

import com.gorauskas.euler.EULER045_HEXA_SEQUENCE_MAX_SIZE
import com.gorauskas.euler.EULER045_LOWER_BOUND
import com.gorauskas.euler.EulerSolution
import com.gorauskas.euler.extensions.isPentagonal
import com.gorauskas.euler.functions.timer
import com.gorauskas.euler.sequences.hexagonalSequence

class Euler45 : EulerSolution {
    override val problem = """
        Project Euler Problem 45

            Triangle, pentagonal, and hexagonal numbers are generated by the following
            formulae:

            Triangle      Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
            Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
            Hexagonal     Hn=n(2n−1)      1, 6, 15, 28, 45, ...

            It can be verified that T285 = P165 = H143 = 40755.

            Find the next triangle number that is also pentagonal and hexagonal.
    """.trimIndent()

    override val answer = """

        The next triangle number that is also pentagonal and
        hexagonal is ${timer { solve() }}
    """.trimIndent()

    /**
     * hexagonal numbers are a subset of triangular numbers made from an odd n,
     * so this solution only needs to check for hexagonal numbers that are also
     * pentagonal.
     */
    override fun solve(): Long = hexagonalSequence(maxSize = EULER045_HEXA_SEQUENCE_MAX_SIZE)
        .dropWhile { it <= EULER045_LOWER_BOUND }
        .first { it.isPentagonal() }
}
