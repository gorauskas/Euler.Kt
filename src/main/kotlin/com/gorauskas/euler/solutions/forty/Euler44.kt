package com.gorauskas.euler.solutions.forty

import com.gorauskas.euler.EulerSolution
import com.gorauskas.euler.extensions.isPentagonal
import com.gorauskas.euler.functions.timer
import com.gorauskas.euler.sequences.pentagonalSequence

class Euler44 : EulerSolution {
    override val problem = """
        Project Euler Problem 44

            Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first
            ten pentagonal numbers are:

                1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

            It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
            70 ? 22 = 48, is not pentagonal.

            Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
            difference are pentagonal and D = |Pk ? Pj| is minimised; what is the value
            of D?
    """.trimIndent()

    override val answer = """

        The value of D is ${timer { solve() }}
    """.trimIndent()

    override fun solve(): Long {
        val pentagonals = pentagonalSequence(100_000).toList()

        for (x in 1 until 2500) {
            for (y in 1 until x) {
                val pX = pentagonals[x]
                val pY = pentagonals[y]

                if ((pX + pY).isPentagonal() && (pX - pY).isPentagonal()) {
                    return pX - pY
                }
            }
        }
        return 0L
    }
}
